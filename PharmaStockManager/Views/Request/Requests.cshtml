@model IEnumerable<PharmaStockManager.Models.ViewModels.RequestViewModel>
@{
    ViewData["Title"] = "Orders";
    Layout = null;
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />

<style>
    :root {
        --primary-blue: #5a9ecf;
        --lavender: #a68cb1;
        --mint-green: #88b8a5;
        --mid-tone: #93b7df;
        --background: #f4f5f7;
        --text: #2f3542;
        --white: #fff;
        --gray-light: #e8eaed;
        --gray-hover: #ddd;
        --filter-bg: #f9f9f9;
        --filter-border: #ccc;
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Inter", system-ui, -apple-system, sans-serif;
    }

    body {
        background: var(--background);
        color: var(--text);
        display: flex;
        min-height: 100vh;
    }

    .sidebar {
        width: 250px;
        background-color: var(--text);
        height: 100vh;
        position: fixed;
        padding: 2rem;
        color: var(--white);
        top: 0;
        left: 0;
        overflow-y: auto;
        z-index: 1000;
    }

    .sidebar-header {
        padding-bottom: 2rem;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        margin-bottom: 2rem;
    }

    .logo {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .logo-circle {
        width: 44px;
        height: 44px;
        background: linear-gradient(135deg, var(--primary-blue) 33%, var(--mint-green) 33% 66%, var(--lavender) 66%);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .pill-icon {
        width: 20px;
        height: 32px;
        background-color: var(--white);
        border-radius: 16px;
    }

    .nav-menu {
        list-style: none;
    }

    .nav-item {
        margin: 0.5rem 0;
    }

    .nav-link {
        display: flex;
        align-items: center;
        padding: 0.75rem 1rem;
        color: rgba(255, 255, 255, 0.8);
        text-decoration: none;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

        .nav-link:hover, .nav-link.active {
            background: rgba(255, 255, 255, 0.1);
            color: var(--white);
            transform: translateX(5px);
        }

        .nav-link i {
            width: 20px;
            margin-right: 1rem;
        }

    .main-content {
        flex: 1;
        margin-left: 250px;
        padding: 2rem;
        background-color: var(--background);
        min-height: calc(100vh - 60px);
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
        background-color: var(--white);
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .orders-table {
        width: 100%;
        border-collapse: collapse;
        margin: 1rem 0;
        font-size: 1rem;
    }

        .orders-table thead {
            background-color: var(--lavender);
            color: var(--white);
        }

        .orders-table th, .orders-table td {
            text-align: left;
            padding: 0.75rem;
            border-bottom: 1px solid var(--gray-hover);
        }

        .orders-table tbody tr:hover {
            background-color: var(--gray-hover);
        }

        .orders-table tbody tr:nth-child(even) {
            background-color: var(--gray-light);
        }

    .badge {
        padding: 0.5rem 1rem;
        border-radius: 4px;
        font-size: 0.875rem;
        font-weight: 500;
    }

    .badge-success {
        background-color: var(--mint-green);
        color: var(--white);
    }

    .badge-warning {
        background-color: #ffd43b;
        color: var(--text);
    }

    .badge-danger {
        background-color: #ff6b6b;
        color: var(--white);
    }

    .btn {
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 0.875rem;
        margin-right: 0.5rem;
        transition: opacity 0.2s;
    }

        .btn:hover {
            opacity: 0.9;
        }

    .btn-approve {
        background-color: var(--mint-green);
        color: var(--white);
    }

    .btn-reject {
        background-color: var(--primary-blue);
        color: var(--white);
    }

    @@media (max-width: 768px) {
        .sidebar {
            transform: translateX(-100%);
        }

        .main-content {
            margin-left: 0;
        }
    }

    .header {
        background: var(--white);
        padding: 1.5rem 2rem;
        border-radius: 16px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        max-width: 1200px;
        margin: 20px auto;
    }

    .welcome-section {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .welcome-text h1 {
        font-size: 1.5rem;
        margin-bottom: 0.5rem;
        color: var(--text);
    }

    .welcome-text p {
        color: var(--text);
        opacity: 0.8;
    }

    .user-menu {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .button2 {
        padding: 0.875rem 2rem;
        border-radius: 12px;
        border: none;
        font-size: 1rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        background: linear-gradient(135deg, #b0c7e8, var(--mid-tone), #7a9dc4);
        color: var(--white);
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

        .button2:hover {
            transform: translateY(-2px);
            opacity: 0.9;
        }

    #sort-options {
        padding: 0.5rem 1rem;
        border-radius: 4px;
        border: 1px solid var(--gray-hover);
        background-color: var(--filter-bg);
        font-size: 1rem;
        margin-bottom: 1rem;
        cursor: pointer;
    }

    .filter-section {
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
        margin: 1rem 0;
        gap: 1rem;
    }

        .filter-section input,
        .filter-section select {
            padding: 0.5rem 1rem;
            border: 2px solid var(--gray-light);
            border-radius: 8px;
            font-size: 1rem;
            box-shadow: 0 2px 5px var(--shadow);
            transition: all 0.3s ease-in-out;
            width: 200px; /* Butonlar ve inputlar için uygun genişlik */
        }

            .filter-section input:focus,
            .filter-section select:focus {
                outline: none;
                border-color: var(--primary-blue);
                box-shadow: 0 2px 5px rgba(46, 107, 194, 0.5);
            }

    .filter-btn {
        background-color: var(--primary-blue);
        color: var(--white);
        border: none;
        border-radius: 12px;
        padding: 0.5rem 1.5rem;
        font-size: 1rem;
        cursor: pointer;
        box-shadow: 0 3px 8px var(--shadow);
        transition: all 0.3s ease-in-out;
        width: auto; /* Butonların uygun genişlikte olmasını sağla */
    }

        .filter-btn:hover {
            background-color: var(--mid-tone);
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(46, 107, 194, 0.3);
        }
</style>

<div class="sidebar">
    <div class="sidebar-header">
        <div class="logo">
            <div class="logo-circle">
                <div class="pill-icon"></div>
            </div>
            <span class="logo-text">Pharma Stock Manager</span>
        </div>
    </div>

    <nav>
        <ul class="nav-menu">
            <li class="nav-item">
                <a asp-controller="AdminDashboard" asp-action="Index" class="nav-link">
                    <i class="fas fa-chart-line"></i>
                    Dashboard
                </a>
            </li>
            <li class="nav-item">
                <a asp-controller="Drugs" asp-action="Index" class="nav-link">
                    <i class="fas fa-pills"></i>
                    Envanter
                </a>
            </li>
            <li class="nav-item">
                <a asp-controller="Request" asp-action="Index" class="nav-link active">
                    <i class="fas fa-shopping-cart"></i>
                    Orders
                </a>
            </li>
            <li class="nav-item">
                <a asp-controller="Admin" asp-action="Users" class="nav-link">
                    <i class="fas fa-users"></i>
                    Users
                </a>
            </li>
            <li class="nav-item">
                <a asp-controller="Categories" asp-action="Index" class="nav-link">
                    <i class="fas fa-chart-bar"></i>
                    Kategori
                </a>
            </li>
            <li class="nav-item">
                <a asp-controller="Drugs" asp-action="TransactionHistory" class="nav-link">
                    <i class="fas fa-history"></i>
                    History
                </a>
            </li>
            <li class="nav-item">
                <a asp-controller="Account" asp-action="AdminProfile" class="nav-link">
                    <i class="fas fa-user-circle"></i>
                    Profile
                </a>
            </li>
        </ul>
    </nav>
</div>

<main class="main-content">
    <header class="header">
        <div class="welcome-section">
            <div class="welcome-text">
                <h1>Orders </h1>
            </div>
        </div>

        <div class="user-menu">
            <span id="current-time"></span>
            <a href="@Url.Action("Logout", "Account")" class="button2">
                <i class="fas fa-sign-out-alt"></i>
                Logout
            </a>
        </div>
    </header>
    <div class="container">
        <div class="filter-section">
            <input type="text" id="search-input" placeholder="Search by Drug or User Name"/>
            <input type="number" id="min-quantity" placeholder="Min Quantity" />
            <input type="number" id="max-quantity" placeholder="Max Quantity" />
            <select id="stock-filter">
                <option value="">Status</option>
                <option value="pending">Pending</option>
                <option value="in-stock">Approved</option>
                <option value="out-of-stock">Rejected</option>
            </select>
            <button class="filter-btn" onclick="applyFilters()">Search</button>
            <button class="filter-btn" onclick="clearFilters()">Clear</button>
        <select id="sort-options" onchange="applyFilters()">
            <option value="">Sort By</option>
            <option value="name-asc">Drug Name (A-Z)</option>
            <option value="name-desc">Drug Name (Z-A)</option>
            <option value="quantity-asc">Quantity Asc</option>
            <option value="quantity-dsc">Quantity Dsc</option>
            <option value="request-asc">Request Date Asc</option>
            <option value="request-dsc">Request Date Dsc</option>
        </select>
        <table class="orders-table">
            <thead>
                <tr>
                    <th>Drug Name</th>
                    <th>Quantity</th>
                    <th>User</th>
                    <th>Request Date</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var request in Model)
                {
                    <tr>
                        <td>@request.DrugName</td>
                        <td>@request.Quantity</td>
                        <td>@request.UserName</td>
                        <td>@request.RequestDate.ToString("yyyy-MM-dd HH:mm")</td>
                        <td>
                            @if (request.IsApproved)
                            {
                                <span class="badge badge-success">Approved</span>
                            }
                            else if (request.IsRejected)
                            {
                                <span class="badge badge-danger">Rejected</span>
                            }
                            else
                            {
                                <span class="badge badge-warning">Pending</span>
                            }
                        </td>
                        <td>
                            @if (!request.IsApproved && !request.IsRejected)
                            {
                                <button class="btn btn-approve approve-btn"
                                        data-id="@request.Id"
                                        data-quantity="@request.Quantity"
                                        data-drugname="@request.DrugName">
                                    Approve
                                </button>
                                <button class="btn btn-reject reject-btn"
                                        data-id="@request.Id">
                                    Reject
                                </button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</main>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $('.approve-btn').click(function () {
            const requestId = $(this).data('id');
            const drugName = $(this).data('drugname');
            const quantity = $(this).data('quantity');

            $.ajax({
                url: '/Request/Approve',
                type: 'POST',
                data: {
                    id: requestId,
                    drugName: drugName,
                    quantity: quantity
                },
                success: function (response) {
                    if (response.success) {
                        alert('Request approved successfully!');
                        location.reload();
                    } else {
                        alert('Failed to approve request: ' + response.message);
                    }
                }
            });
        });

        $('.reject-btn').click(function () {
            const requestId = $(this).data('id');

            $.ajax({
                url: '/Request/Reject',
                type: 'POST',
                data: { id: requestId },
                success: function (response) {
                    if (response.success) {
                        alert('Request rejected successfully!');
                        location.reload();
                    } else {
                        alert('Failed to reject request: ' + response.message);
                    }
                }
            });
        });
    });
    let originalTableRows = []; // Orijinal tablo satırlarını saklamak için

    document.addEventListener('DOMContentLoaded', () => {
        const tableBody = document.querySelector('.orders-table tbody');
        // Orijinal tablo satırlarını kaydet
        originalTableRows = Array.from(tableBody.querySelectorAll('tr'));
    });

    function applyFilters() {
        const searchInput = document.getElementById('search-input').value.toLowerCase();
        const minQuantity = parseInt(document.getElementById('min-quantity').value) || 0;
        const maxQuantity = parseInt(document.getElementById('max-quantity').value) || Number.MAX_SAFE_INTEGER;
        const statusFilter = document.getElementById('stock-filter').value.toLowerCase();
        const sortOption = document.getElementById('sort-options').value;
        const tableBody = document.querySelector('.orders-table tbody');

        // Orijinal tablo satırlarını al
        const filteredRows = originalTableRows.filter(row => {
            const drugName = row.children[0].innerText.toLowerCase();
            const userName = row.children[2].innerText.toLowerCase();
            const quantity = parseInt(row.children[1].innerText);
            const status = row.children[4].innerText.toLowerCase();

            // Filtreleme koşulları
            const matchesSearch = drugName.includes(searchInput) || userName.includes(searchInput);
            const matchesQuantity = quantity >= minQuantity && quantity <= maxQuantity;

            let matchesStatus = true;
            if (statusFilter === "pending") {
                matchesStatus = !status.includes("approved") && !status.includes("rejected");
            } else if (statusFilter === "in-stock") {
                matchesStatus = status.includes("approved");
            } else if (statusFilter === "out-of-stock") {
                matchesStatus = status.includes("rejected");
            }

            return matchesSearch && matchesQuantity && matchesStatus;
        });

        // Sıralama işlemi
        filteredRows.sort((a, b) => {
            const getCellValue = (row, index) => row.children[index].innerText.trim();

            switch (sortOption) {
                case 'name-asc':
                    return getCellValue(a, 0).localeCompare(getCellValue(b, 0));
                case 'name-desc':
                    return getCellValue(b, 0).localeCompare(getCellValue(a, 0));
                case 'quantity-asc':
                    return parseInt(getCellValue(a, 1)) - parseInt(getCellValue(b, 1));
                case 'quantity-dsc':
                    return parseInt(getCellValue(b, 1)) - parseInt(getCellValue(a, 1));
                case 'request-asc':
                    return new Date(getCellValue(a, 3)) - new Date(getCellValue(b, 3));
                case 'request-dsc':
                    return new Date(getCellValue(b, 3)) - new Date(getCellValue(a, 3));
                default:
                    return 0; // Varsayılan sıralama
            }
        });

        // Tabloyu güncelle
        tableBody.innerHTML = '';
        filteredRows.forEach(row => tableBody.appendChild(row));
    }

    function clearFilters() {
        // Filtre alanlarını temizle
        document.getElementById('search-input').value = '';
        document.getElementById('min-quantity').value = '';
        document.getElementById('max-quantity').value = '';
        document.getElementById('stock-filter').value = '';

        // Tabloyu ilk haline döndür
        const tableBody = document.querySelector('.orders-table tbody');
        tableBody.innerHTML = '';
        originalTableRows.forEach(row => tableBody.appendChild(row));
    }
</script>